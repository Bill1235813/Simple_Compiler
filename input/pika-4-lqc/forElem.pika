var s:="rabbit".
const a1:=[[1,2,3],[4,5,6],[7,8,9]].
const a2:=[[3//4,4//5,5//6],[13//14,14//15,15//16]].
const a3:=["first","second","third"].
const a4:=[["first1","first2","first3"],a3,["four1", "four2","four3","four4"]].
const a5:=[[1.2,3.5,8.9],[34.5,11.3,45.6],[46.5,22.4]].
const a6:=[[^r^,^a^,^b^],[^b^,^a^,^t^]].
const add:= <int a,int b>->int{
	return a + b.
}.

const minus:=<int a,int b>->int{
	return a - b.
}.

const a7:=[add,minus].

exec{
	var i:=120.
	for elem i of s {
		#i:=i + 1.

		{
			var i:=<int x,int y>->int{
				return 1.
			}.
			print i(4,5);.
		}
		s:="BigRabbit".
		#print s.
		print i.
	}
	print ;i,_n_.

	for elem i of a1{
		print i;.
		for elem j of i{
			if(j==1){
				continue.
			}
	#		if(j==8){
	#			break.
	#		}
			print j;.
		}
	}
	print ,_n_.
	for elem i of a2{
		print i;.
		for elem j of i{
			print j;.
		}
	}
	print ,_n_.
	for elem i of a3{
		print i;.
	}
	print ,_n_.

	for elem i of a4{
		print i;.
		for elem j of i{
			print j;.
		}
	}
	print ,_n_.
	for elem i of a5{
		print i;.
		for elem j of i{
			print j;.
		}
	}
	print ,_n_.
	for elem i of a6{
		print i;.
		for elem j of i{
			print j+s;.
		}
	}
	print ,_n_.
	for elem i of a7{
		print i(4,9);.
	}
	print ,_n_.

	for elem i of a1{
		print i;.
		for elem j of i{
			var x:=1.
			while(x<j){
				x:=x + 1.
				if(x==5){
					break.
				}
				if(x==3){
					continue.
				}
				print x;.
			}
			
		}
	}


	#var a8:=new [string](3).
	#for elem i of a8[1]{
	#	print "no".
	#}
	#var a9:=new[[int]](3).
	#for index i of a9[1]{
	#	print "no".
	#}
}


